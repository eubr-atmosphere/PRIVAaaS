#!/usr/bin/python








###############################################################################
## IMPORT                                                                    ##
###############################################################################








###############################################################################
## DEFINITIONS                                                               ##
###############################################################################
SUCCESS=0
PROBLEM=1







###############################################################################
## PROCEDURES                                                                ##
###############################################################################








###############################################################################
## CLASSES                                                                   ##
###############################################################################
class Show_in_Shell:

    """
    ---------------------------------------------------------------------------
    """


    ##########################################################################
    ## ATTRIBUTES                                                           ##
    ##########################################################################


    ##########################################################################
    ## SPECIAL METHODS                                                      ##
    ##########################################################################


    ##########################################################################
    ## PUBLIC METHODS                                                       ##
    ##########################################################################
    ##
    ## BRIEF: 
    ## -----------------------------------------------------------------------
    ## @PARAM arguments == arguments to show.
    ##
    def list(self, arguments):

        if len(arguments) != 0:
            print "INSTANCES"
            print "---------------------------------------------------"
            for instanceKey in arguments.keys():
                print instanceKey,arguments[instanceKey];
            print "---------------------------------------------------"
        else:
            print 'Instances not found!'

    ##
    ## BRIEF: 
    ## -----------------------------------------------------------------------
    ## @PARAM arguments == arguments to show.
    ##
    def status(self, arguments):
        print arguments


    ##
    ## BRIEF: 
    ## -----------------------------------------------------------------------
    ## @PARAM arguments == arguments to show.
    ##
    def create(self, arguments):
        if int(arguments["status"]) == SUCCESS:
            status = "create with sucess!"
        else:
            status = "a problem was found - code " + arguments['status'];

        print "InstanceID: " + str(arguments["instanceID"]);
        print "Status....: " + status;


    ##
    ## BRIEF: 
    ## -----------------------------------------------------------------------
    ## @PARAM arguments == arguments to show.
    ##
    def finish(self, arguments):
        print arguments


    ##########################################################################
    ## PRIVATE METHODS                                                      ##
    ##########################################################################
## END CLASS.




###############################################################################
## MAIN                                                                      ##
###############################################################################
if __name__ == "__main__":

    try:
        main = Show_in_Shell();

    except ValueError as exceptionNotice:
        log(exceptionNotice);

    sys.exit(0);

## EOF.
